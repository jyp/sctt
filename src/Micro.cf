
entrypoints Module ;

layout "of" ;

Module. Module ::= "TERM" Term "TYPE" Term ;

First.  Proj ::= ".1" ;
Second. Proj ::= ".2" ;

separator Tag ",";
T.  Tag      ::= "'" Var;
Br. Branch   ::= Tag "->" Term;

separator Branch ".";
Concl.  Term2 ::=    DC ;
Case.  Term2 ::= "case" DC "of" "{" [Branch] "}";

Destr.   Term1 ::=    Var "="  DC ";" Term1;
Constr.  Term1 ::=    Var ":=" DC ";" Term1;

coercions Term 2;


Tag.    DC3 ::= Tag ;
V.      DC3 ::= Var;
Pair.   DC3 ::= "(" DC "," DC ")";
Lam.    DC3 ::= "\\" Var "->" Term2;
Proj.   DC3 ::= DC3 Proj;
Fin.    DC3 ::= "{" [Tag] "}" ;
Univ.   DC3 ::= "*" Nat;
Appl.   DC2 ::= DC2 DC3;
Fun.    DC1 ::= DC2 "->" Term2;
Pi.     DC1 ::= "(" Var ":" DC ")" "->" Term2;
Sigma.  DC1 ::= "(" Var ":" DC ")" "X" Term2;
Cut.    DC  ::= DC1 ":" DC;

coercions DC 4;

position token Var (letter)((letter|digit|'-'|'_'|'\'')*) ;
position token Nat digit+ ;

comment "{-" "-}" ;
comment "--" ;

